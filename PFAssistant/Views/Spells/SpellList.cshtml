@using X.PagedList.Mvc;
@using X.PagedList;

@model X.PagedList.IPagedList<PFAssistant.MongoContext.Spell>

@*@model PFAssistant.Models.SpellSearchModel*@

@{
    ViewBag.Title = "SpellList";
}

<h2>Spell List</h2>
    @using (Html.BeginForm("SpellList", "Spells", FormMethod.Get))
    {
        <p>
            <div class="form-group">
                Search by Name: @Html.TextBox("Name", ViewBag.Filter as string)                
                <input type="submit" value="Search" />
                @*Search by School: @Html.TextBox("School")
                Search by Class: @Html.TextBox("Class")*@

            </div>
        </p>
    }
       

@*<p>
        @using (Html.BeginForm("SpellList", "Spells", FormMethod.Post))
        {
            <div class="form-group">
                Search by Name: @Html.TextBoxFor(x => x.SearchValues.Name, new { @class = "form-control" })
                <!--<input type="submit" value="Search" />-->
                Search by School: @Html.TextBoxFor(x => x.SearchValues.School, new { @class = "form-control" })
                Search by Class: @Html.TextBoxFor(x => x.SearchValues.Class, new { @class = "form-control" })
                <input type="submit" value="Search" />
            </div>
        }
    </p>*@

<p>
    @using (Html.BeginForm("SpellList", "Spells", FormMethod.Get))
    {
        <table class="table">
            <tr>
                <th>Name</th>
                <th>School</th>
                <th>Descriptor</th>
                <th>Description</th>                
            </tr>

            @foreach (var item in Model)            
            {
                <tr>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.Name)*@
                        @Html.ActionLink(item.Name, "Details", new { id = item.Id })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.School)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descriptor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShortDescription)
                    </td>                    
                    @*<td>
                            @Html.ActionLink(item.Name, "Details", new { id = item.Id })
                        </td>*@
                </tr>
            }
        </table>
    }
</p>

<div>
    @Html.PagedListPager(Model, page => Url.Action("SpellList", new { filter = ViewBag.Filter, page, pageSize = Model.PageSize}))
    @*@Html.PagedListPager(Model.PagedSpellList, page => Url.Action("SpellList", new { Model.SearchValues, page, pageSize = Model.PagedSpellList.PageSize }))*@
</div>